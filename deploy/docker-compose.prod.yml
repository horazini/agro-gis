
version: '3'

services:
  postgres:
    container_name: postgres-db
    image: postgis/postgis:14-3.4-alpine
    restart: always
    env_file: ./.env.prod
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
    volumes:
      - ../database/volume:/var/lib/postgresql/data
      - ../database/pgseed.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql



  express-server:
    container_name: express-server
    build:
      context: ../server
    restart: always
    depends_on:
      - postgres
    env_file: ./.env.prod

  client:
    container_name: nginx-react-client
    restart: always
    build: 
      context: ../client
    depends_on:
      - express-server

  nginx:
    container_name: nginx-reverse-proxy 
    image: nginx:1.21-alpine
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - '80:80'
      - '443:443'
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; 
              nginx -s reload; done & nginx -g "daemon off;"''' 
    depends_on:
      - express-server
      - client

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :;
                 do certbot renew; sleep 12h & wait $${!}; done;'"
                 
